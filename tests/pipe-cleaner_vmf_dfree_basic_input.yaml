#Combine this config file with the config yaml to fuzz the haystack SUT
#
# This one has target (SUT) specific stuff,
#   such as as SUT args and input directory path
#
# Note that is one will always crash, 
# which causes VMF to crash on the first iteration by default
# invoke with
# $ cd build
# $ cmake .. && make && make install && cd vmf_install
# ./bin/vader -c test/config/PipeCliInterpreter_basicModules.yaml -c ~/fuzzer/tagged-c/tests/pipe-cleaner_vmf_dfree_basic_input.yaml

vmfVariables:
  - &SUT_ARGV /home/amn/fuzzer/tagged-c/tests/double_free_basic_input.c
  - &INTERP_PATH /home/amn/fuzzer/tagged-c/ccomp
  - &DIAGNOSTIC_BIN /home/amn/fuzzer/tagged-c/tests/double_free_no_input.c
  - &INPUT_DIR /home/amn/fuzzer/test_inputs/

# VMF Framework parameters
# Such as logging path, logging level, plugin path

vmfFramework:
  outputBaseDir: output-basic
  logLevel : 0 #0=DEBUG, 1=INFO, 2=WARNING, 3=ERROR

# Modules and their specific parameters
controller:
  runTimeInMinutes: 1 

storage:
  # TODO rip this out properly. RN its testcase size
  #sortByKey: FITNESS
  sortOrder: ASCENDING

SaveCorpusOutput:
  tagsToSave: ["CRASHED", "HUNG", "PIPE_POLICYFAILURE"]

# NB there is one for the stats output
PipeCliInterpreterInitialization:
  diagnostic_test_bin : *DIAGNOSTIC_BIN
  interp:  *INTERP_PATH
  # NB single policy for now
  policy: dfree

PipeCliInterpreterExecutor:
  sutArgv: *SUT_ARGV
  interp:  *INTERP_PATH
  # NB single policy for now
  policy: dfree

DirectoryBasedSeedGen:
  inputDir: *INPUT_DIR

# This lets it mutate crashing inputs.
# this faults regardless of input, so it should all dedup down to
#   the same entry
# otherwise its normal test cases only
GeneticAlgorithmInputGenerator:
  enableMutationOfCrashes: true
